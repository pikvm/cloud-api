syntax = "proto3";

option go_package = "github.com/pikvm/cloud-api/hive_for_agent";
package hive_for_agent;

import "google/protobuf/empty.proto";

enum HiveEventType {
    HETYPE_UNSPECIFIED = 0;
    HETYPE_PING = 1;
    HETYPE_OK = 2; // response
    HETYPE_ERROR = 3; // response
}

message HiveEvent {
    uint32 id = 1;
    HiveEventType type = 2;
    bool is_response = 3;
    oneof body {
        google.protobuf.Empty ping = 4;
        string error = 5;
    }
}

enum AgentEventType {
    AETYPE_UNSPECIFIED = 0;
    AETYPE_PING = 1;
    AETYPE_OK = 2; // response
    AETYPE_ERROR = 3; //response
    AETYPE_REGISTER = 4;
}

message AgentEvent {
    message AgentInfo {
        string name = 1;
        string version = 2;
    }

    uint32 id = 1;
    AgentEventType type = 2;
    bool is_response = 3;
    oneof body {
        google.protobuf.Empty ping = 4;
        string error = 5;
        AgentInfo agent_info = 6;
    }
}

message AvailableProxies {
    message ProxyInfo {
        string proxy_endpoint = 1;
    }

    repeated ProxyInfo available_proxies = 1;
}

message CertbotDomainName {
    string domain_name = 1;
    string txt = 2;
}

service HiveForAgent {
    rpc AuthCheck (google.protobuf.Empty) returns (google.protobuf.Empty);
    rpc EventsChannel (stream AgentEvent) returns (stream HiveEvent);
    rpc GetAvailableProxies (google.protobuf.Empty) returns (AvailableProxies);
    rpc CertbotAdd (CertbotDomainName) returns (google.protobuf.Empty);
    rpc CertbotDel (CertbotDomainName) returns (google.protobuf.Empty);
}
