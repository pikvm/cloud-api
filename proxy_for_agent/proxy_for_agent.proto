syntax = "proto3";
package proxy_for_agent;

import "google/protobuf/empty.proto";

option go_package = "github.com/pikvm/cloud-api/proxy_for_agent";

enum ProxyEventType {
    PETYPE_UNSPECIFIED = 0;
    PETYPE_PING = 1;
    PETYPE_OK = 2; // response
    PETYPE_ERROR = 3; // response
    PETYPE_NEW_CONNECTION = 4;
}

message ProxyEvent {
    message NewConnection {
        string cid = 1;
        string connect_to = 2;
    }
    //

    uint32 id = 1;
    ProxyEventType type = 2;
    bool is_response = 3;
    oneof body {
        google.protobuf.Empty ping = 4;
        string error = 5;
        NewConnection new_connection = 6;
    }
}

enum AgentEventType {
    AETYPE_UNSPECIFIED = 0;
    AETYPE_PING = 1;
    AETYPE_OK = 2; // response
    AETYPE_ERROR = 3; // response
    AETYPE_REGISTER = 4;
}

message AgentEvent {
    message AgentInfo {
        string name = 1;
    } 

    uint32 id = 1;
    AgentEventType type = 2;
    bool is_response = 3;
    oneof body {
        google.protobuf.Empty ping = 4;
        string error = 5;
        AgentInfo agent_info = 6;
    }
}

message ConnectionMessage {
    enum MessageType {
        MSGTYPE_CHUNK = 0;
        MSGTYPE_METADATA = 1;
    }
    message Metadata {
        string cid = 1;
    }

    MessageType type = 1;
    oneof body {
        bytes chunk = 2;
        Metadata metadata = 3;
    }
}

service ProxyForAgent {
    rpc EventsChannel(stream AgentEvent) returns (stream ProxyEvent);
    rpc ConnectionChannel(stream ConnectionMessage) returns (stream ConnectionMessage);
}
